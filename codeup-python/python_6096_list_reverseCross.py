# 아침코테 #코드업 #파이썬 #기초100제 #리스트 #바둑알십자뒤집기

# 타이틀: 6096 : [기초-리스트] 바둑알 십자 뒤집기
# 문제 : 바둑판(19 * 19)에 흰 돌(1) 또는 검정 돌(0)이 모두 꽉 채워져 놓여있을 때, n개의 좌표를 입력받아 십(+)자 뒤집기한 결과를 출력하는 프로그램을 작성해보자.

# 부모님을 기다리던 영일이는 검정/흰 색 바둑알을 바둑판에 꽉 채워 깔아 놓고 놀다가...
# "십(+)자 뒤집기를 해볼까?"하고 생각했다.

# 십자 뒤집기는
# 그 위치에 있는 모든 가로줄 돌의 색을 반대(1->0, 0->1)로 바꾼 후, 
# 다시 그 위치에 있는 모든 세로줄 돌의 색을 반대로 바꾸는 것이다.
# 어떤 위치를 골라 집자 뒤집기를 하면, 그 위치를 제외한 가로줄과 세로줄의 색이 모두 반대로 바뀐다.

'''
참고
리스트가 들어있는 리스트를 만들면?
가로번호, 세로번호를 사용해 2차원 형태의 데이터처럼 쉽게 기록하고 사용할 수 있다.
리스트이름[번호][번호] 형식으로 저장되어있는 값을 읽고 쓸 수 있다.


입력
바둑알이 깔려 있는 상황이 19 * 19 크기의 정수값으로 입력된다.
십자 뒤집기 횟수(n)가 입력된다.
십자 뒤집기 좌표가 횟수(n) 만큼 입력된다. 단, n은 10이하의 자연수이다.

출력
십자 뒤집기 결과를 출력한다.

'''

# 입력 예시
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 2
# 10 10
# 12 12

# 출력 예시
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

data = [];
for i in range(20) :
  data.append([]);
  for j in range(20) :
    if i == 9 or i == 11 or j == 9 or j == 11:
      data[i].append(1);
    else :
      data[i].append(0);
  
# FIXME: 수정해야해;;;;
n = int(input())
for i in range(n) :
  x,y=input().split()
  for j in range(1, 20) :
    if data[j][int(y)]==0 :
      data[j][int(y)]=1
    else :
      data[j][int(y)]=0

    if data[int(x)][j]==0 :
      data[int(x)][j]=1
    else :
      data[int(x)][j]=0

for i in range(1, 20) :
  for j in range(1, 20) : 
    print(data[i][j], end=" ")
  print()


